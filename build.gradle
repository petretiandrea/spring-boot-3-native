plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.graalvm.buildtools.native' version '0.9.20'
}

group = 'com.example.reactive'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

ext {
    set('springCloudVersion', "2022.0.3")
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'
    implementation 'org.springframework.kafka:spring-kafka'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
    useJUnitPlatform()
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

graalvmNative {
    metadataRepository {
        enabled.set(true)
        version.set("0.2.6")
    }

    binaries {
        useArgFile.set(false)
        named("main") {
            useFatJar.set(true)
            javaLauncher.set(javaToolchains.launcherFor {
                languageVersion.set(JavaLanguageVersion.of(17))
                vendor.set(JvmVendorSpec.GRAAL_VM)
            })
            mainClass.set("com.example.reactive.demoreactivenative.DemoReactiveNativeApplication")
            buildArgs.add("--add-opens=java.base/java.nio=ALL-UNNAMED")
            buildArgs.add("--add-opens=java.base/jdk.internal.misc=ALL-UNNAMED")
            buildArgs.add("--add-opens=java.base/jdk.internal.ref=ALL-UNNAMED")
            buildArgs.add("--trace-object-instantiation=ch.qos.logback.classic.Logger")
            buildArgs.add("--initialize-at-build-time=org.slf4j.LoggerFactory,ch.qos.logback")
            buildArgs.add("--initialize-at-run-time=io.netty")
        }
    }
}