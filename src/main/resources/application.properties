logging.level.root=INFO

spring.cloud.stream.function.autodetect=false

spring.cloud.stream.default-binder=myKafkaConsumer
spring.cloud.function.definition=myConsumer

# example consumer
spring.cloud.stream.bindings.myConsumer-in-0.destination=supplier-topic
spring.cloud.stream.bindings.myConsumer-in-0.content-type=application/json
spring.cloud.stream.bindings.myConsumer-in-0.group=my-kafka-consumer-group
spring.cloud.stream.bindings.myConsumer-in-0.binder=myKafkaConsumer
spring.cloud.stream.bindings.myConsumer-in-0.consumer.concurrency=1
spring.cloud.stream.bindings.myConsumer-in-0.consumer.auto-startup=true

spring.cloud.stream.binders.myKafkaConsumer.type=kafka
spring.cloud.stream.binders.myKafkaConsumer.environment.spring.cloud.stream.kafka.binder.brokers=localhost:29095

# example producer
spring.cloud.stream.output-bindings=supplier
spring.cloud.stream.bindings.supplier-out-0.destination=${KAFKA_SUPPLY_TOPIC:supplier-topic}
spring.cloud.stream.bindings.supplier-out-0.content-type=application/json
spring.cloud.stream.bindings.supplier-out-0.binder=myKafka
spring.cloud.stream.bindings.supplier-out-0.producer.partition-count=1

spring.cloud.stream.binders.myKafka.type=kafka
spring.cloud.stream.binders.myKafka.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKER:localhost:29095}